#
# Minimal Sphinx configuration sample (clean, simple, functional)
#
source goods_src 
{
    type            = mysql 
    sql_host        = localhost ## 数据库服务器,这里因为是测试,使用的是本地数据库
    sql_user        = root # 数据库用户名
    sql_pass        =  123456# 数据库密码
    sql_db          = zhlx ## 数据库名称,替换成你自己的数据库名称
    sql_port        = 3306 ## 数据库端口,默认3306
    sql_query_pre   = SET NAMES utf8 ## 如果你的数据库不是uft8编码的,注释掉本行
    sql_query       = SELECT id,subject,info,content,shop_id  FROM good WHERE is_ok='1' and grounding='1' and sh_state='2'
    #sql_query      = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content  FROM documents
    ##sql_attr_uint       = group_id ## 属性
    ##sql_attr_timestamp  = date_added ## 属性,可用来排序
    sql_attr_uint    = shop_id
}

source order_src 
{
    type            = mysql 
    sql_host        = localhost ## 数据库服务器,这里因为是测试,使用的是本地数据库
    sql_user        = root # 数据库用户名
    sql_pass        =  123456# 数据库密码
    sql_db          = zhlx ## 数据库名称,替换成你自己的数据库名称
    sql_port        = 3306 ## 数据库端口,默认3306
    sql_query_pre   = SET NAMES utf8 ## 如果你的数据库不是uft8编码的,注释掉本行
    sql_query       = SELECT a.id,a.user_id,a.total_m,a.gg1,a.gg2,a.oid,a.pic_src,a.subject_src,b.`subject`,unix_timestamp(ceateTime) as ceateTime,b.info,b.pic,c.`Shop_name` FROM member_order_detail AS a INNER JOIN good AS b ON a.good_id=b.id INNER JOIN company AS c ON b.shop_id=c.id WHERE b.is_ok='1' and b.grounding='1' and b.sh_state='2' ORDER BY a.id DESC
    sql_attr_uint       = user_id ## 属性
    sql_attr_timestamp  = ceateTime ## 属性,可用来排序
}


index goods 
{
    source          = goods_src ## 基于这个数据源构建索引
    path            = D:\wamp64\www\sphinx\core\data\goods ## 存放索引的目录,自己创建
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F  ##  指定utf-8的编码表
    mlock           = 0
    morphology      = none ## 词形处理器,如果检索中文用不到,dogs<==>dog
    min_word_len        = 1 ## 最小索引词长度,小于这个长度的词不会被索引
    ngram_len       = 1 ## 简单分词,只支持0和1,如果要搜索中文,请指定为1
    ngram_chars     = U+3000..U+2FA1F ## 需要分词的字符,如果要搜索中文,请放开这行
    html_strip      = 0 ## html标记清理,是否从输出全文数据中去除HTML标记
}
index order
{
    source          = order_src ## 基于这个数据源构建索引
    path            = D:\wamp64\www\sphinx\core\data\order ## 存放索引的目录,自己创建
    charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F  ##  指定utf-8的编码表
    mlock           = 0
    morphology      = none ## 词形处理器,如果检索中文用不到,dogs<==>dog
    min_word_len        = 1 ## 最小索引词长度,小于这个长度的词不会被索引
    ngram_len       = 1 ## 简单分词,只支持0和1,如果要搜索中文,请指定为1
    ngram_chars     = U+3000..U+2FA1F ## 需要分词的字符,如果要搜索中文,请放开这行
    html_strip      = 0 ## html标记清理,是否从输出全文数据中去除HTML标记
}

indexer
{
    # memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
    # optional, default is 128M, max is 2047M, recommended is 256M to 1024M
    mem_limit       = 128M ## 建立索引的时候,索引内存限制
}

searchd
{
    listen          = 9312 ## 监听端口
    listen          = 9306:mysql41

    log         =  D:\wamp64\www\sphinx\core\log\searchd.log## 监听日志
    query_log       = D:\wamp64\www\sphinx\core\log\query.log ## 查询日志
    pid_file        = D:\wamp64\www\sphinx\core\log\searchd.pid ## ## 进程id文件
    read_timeout        = 5 ## 客户端读超时时间
    client_timeout      = 300 ## 客户端持久连接超时时间,即客户端读一次以后,持久连接,然后再读一次,中间这个持久连接的时间
    max_children        = 30 ## 并行执行搜索的数目
    persistent_connections_limit    = 30
    preopen_indexes     = 1 ## 索引预开启，是否强制重新打开所有索引文件
    unlink_old      = 1 ## 索引轮换成功之后，是否删除以.old为扩展名的索引拷贝
    max_packet_size     = 8M ## 网络通讯时允许的最大的包的大小
    max_filters     = 256 ## 每次查询允许设置的过滤器的最大个数
    max_filter_values   = 4096 ## 单个过滤器允许的值的最大个数
    max_batch_queries   = 32 ## 每次批量查询的查询数限制
    workers         = threads # for RT to work     多处理模式（MPM）。 可选项；可用值为none、fork、prefork，以及threads。 默认在Unix类系统为form，Windows系统为threads。

}